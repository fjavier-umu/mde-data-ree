grammar DDL;

options {
	backtrack=true;
}  

data_definition 
	: 	(data_definition_statement)*
	;
	
data_definition_statement
	: 	database
	|	table
	|	comment_table
	|	comment_column
	|	disabled_constraint
	|	added_constraint_ck
	|	added_constraint_fk	
	;

table
	:	'CREATE' (LOG_CONJ 'REPLACE')? 'TABLE' ID '(' (column)* (',')? (ck (',')?)* (pk)? (',')? (fk (',')?)* ')' ('LOGGING')? ('NOCOMPRESS')? ('NOCACHE')? ('NOPARALLEL')? ('MONITORING')?';' 
	;

comment_table
	:	'COMMENT ON TABLE' ID 'IS' CVALUE ';'
	;

column
	:	ID type ('(' NUMBER ('BYTE')? ')')? ('CONSTRAINT')? (name_constraint)? ('NULL' | 'NOT NULL')? (defecto)? (',')?
	;

defecto 
	:	'DEFAULT' ('NULL' | 'NOT NULL' | NUMBER | CVALUE)
	;

comment_column
	:	'COMMENT ON COLUMN'  table_references '\.' ID 'IS'  CVALUE ';'
	;

disabled_constraint
	: 'ALTER TABLE' table_references 'DROP CONSTRAINT' name_constraint ';'
	;

added_constraint_fk
	: 'ALTER TABLE' table_references 'ADD' fk ';'
	;

added_constraint_ck
	: 'ALTER TABLE' table_references 'ADD' ck ';'
	;

ck
	:	'CONSTRAINT' ID 'CHECK' '(' (log_expresion)+ ')'
	;
	
fk
	:	'CONSTRAINT' ID 'FOREIGN KEY' '(' (column_list)* ')' 'REFERENCES' (schema_references)? ('\.')? table_references '(' (references_column_list)* ')' ('ON')? ('DELETE' | 'UPDATE')? ('CASCADE')? ('DISABLE')?
	;

pk
	:	'CONSTRAINT' ID 'PRIMARY KEY' '(' (column_list)* ')'
	;

column_ck
	:	ID
	;

schema_references
	:	ID
	;

table_references
	:	ID
	;

name_constraint
	:	ID
	;

references_column_list
	:	ID (',')?
	;

value_list
	:	CVALUE (',')?
	;

column_list
	:	ID (',')?
	;

database
	:	'CREATE' ('DATABASE' | 'SCHEMA') ('IF NOT EXISTS')? ID (specification)? ';'
	;

specification
	:	('DEFAULT')? 'CHARACTER' 'SET' (COMPARATOR)? ID
  	|	('DEFAULT')? 'COLLATE' (COMPARATOR)? ID
  	;

log_expresion
	: column_ck (COMPARATOR (NUMBER | CVALUE) LOG_CONJ? | 'IN' '(' (value_list)* ')')
	;

type
	:	(EXACTO | APROXIMADO | CHARACTERS | BITS | TIMES | INTERVALS | BINARIES)
	;

EXACTO
	:	('NUMBER' | 'NUMERIC' | 'INTEGER' | 'SMALL INTEGER' | 'DECIMAL' | 'INT' | 'SMALL INT')
	;

APROXIMADO
	: ('DOUBLE PRECISION' | 'LONG' | 'LONG RAW' | 'FLOAT' | 'REAL')
	;

CHARACTERS
	: ('CHAR' | 'VARCHAR' | 'VARCHAR2' | 'NVARCHAR2' | 'NCHAR' | 'CHAR VARYING' | 'CHARACTER' | 'CHARACTER VARYING' | 'NATIONAL CHAR' | 'NATIONAL CHAR VARYING' | 'NATIONAL CHARACTER' | 'NATIONAL CHARACTER VARYING' | 'NCHAR VARYING' | 'CLOB' | 'NCLOB')
	;

BITS
	: ('BIT' | 'BIT VARYING')
	;

TIMES
	: ('DATE' | 'TIME' | 'TIMESTAMP')
	;

INTERVALS
	: ('YEAR-MONTH' | 'DAY-TIME')
	;

BINARIES
	: ('BFILE' | 'BLOB' | 'BINARY_DOUBLE' | 'BINARY_FLOAT')
	;

SQUOTE					: '\u0027';
CVALUE					: SQUOTE ( options {greedy=false;} : . )* SQUOTE;
NUMBER					: ('0'..'9' | ',')*;
COMPARATOR				:  '<>' | '>=' | '<=' | '=' | '>' | '<';
LOG_CONJ				: 'OR' | 'AND';
ID 						: ('a'..'z' | 'A'..'Z') ( 'a' .. 'z' | 'A' .. 'Z' | '0' .. '9' | '_' | '$' | '#' | '-' )*;
WS 						: (' ' | '\t' | '\n' | '\r')+ {$channel=HIDDEN;};
ML_COMMENT:
	'/*' (options {greedy=false;} : .)* '*/' (';')? { $channel=HIDDEN;}
	;
	
OL_COMMENT: '--' ( options {greedy=false;} : . )* '\n'+ { $channel=HIDDEN;}
	;